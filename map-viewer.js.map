{"version":3,"file":"map-viewer.js","sourceRoot":"","sources":["src/map-viewer.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html} from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\nimport {createCesiumViewer, zoomToDataSource} from \"./cesium/cesiumHelpers\";\r\nimport {addData, addTileset} from './cesium/dataLoader';\r\n\r\nimport {styles} from \"./styles/styles\";\r\nimport {Cesium3DTileset, DataSource, Viewer} from \"cesium\";\r\n\r\n\r\n\r\n@customElement('map-viewer')\r\nexport class MapViewer extends LitElement{\r\n    static override styles = styles;\r\n\r\n    @property({ type: String, attribute: 'cesium-base-url' })\r\n    cesiumBaseURL = '';\r\n\r\n    @property({ type: String, attribute: 'ion-token' })\r\n    ionToken = '';\r\n\r\n    @property({ type: String, attribute: 'data-terrain' }) // New\r\n    dataTerrain = '';\r\n\r\n    // @property({ type: Array,attribute: 'data-tileset', converter: {\r\n    //         fromAttribute: (value: any) => {\r\n    //             try {\r\n    //                 return JSON.parse(value);\r\n    //             } catch {\r\n    //                 return [];\r\n    //             }\r\n    //         },\r\n    //     }})\r\n    // tilesetUrl: string[] = [];\r\n\r\n    @property({ type: Array, attribute: 'data-tileset', converter: {\r\n            fromAttribute: (value: any) => {\r\n                try {\r\n                    return new Map(JSON.parse(value));\r\n                } catch {\r\n                    return new Map();\r\n                }\r\n            },\r\n        }})\r\n    tilesetUrl:  Map<string, { url: string; icon: string | undefined, description: string | undefined, tileset?: Cesium3DTileset  }> = new Map();\r\n\r\n\r\n    @property({ type: Object, converter: {\r\n            fromAttribute: (value:any) => {\r\n                try {\r\n                    return new Map(JSON.parse(value));\r\n                } catch {\r\n                    return new Map();\r\n                }\r\n            },\r\n        }})\r\n    data: Map<string, { url: string; contour: boolean, icon: string | undefined, description: string | undefined, dataSource:DataSource | undefined  }> = new Map();\r\n\r\n    private _viewer: Viewer | undefined;\r\n\r\n    override render() {\r\n        return html`\r\n      <div id=\"cesiumContainer\">\r\n      </div>\r\n      <div id=\"buttonContainer\">\r\n          <h2 class=\"groupTitle\">Layers</h2>\r\n          ${Array.from(this.tilesetUrl.entries()).map(\r\n                  ([key, value]) => html`\r\n                      <button\r\n                              class=\"toggleButton\"\r\n                              @click=\"${() => this.toggleTilesetVisibility(key)}\"\r\n                      >\r\n                          ${value.icon ? html`<img class=\"icon\" src=\"${value.icon}\" alt=\"Icon for ${key}\" width=\"25\" height=\"25\">` : ''}\r\n                          ${value.description ? html`<span class=\"buttonDescription\">${value.description}</span>` : ''}\r\n                      </button>\r\n                  `\r\n          )}\r\n          <h2 class=\"groupTitle\">Data</h2>\r\n          ${Array.from(this.data.entries()).map(\r\n                  ([key, value]) => html`\r\n            <button\r\n              class=\"toggleButton\"\r\n              @click=\"${() => this.toggleDataVisibility(key)}\"\r\n            >\r\n                ${value.icon ? html`<img class=\"icon\" src=\"${value.icon}\" alt=\"Icon for ${key}\" width=\"25\" height=\"25\">` : ''}\r\n                ${value.description ? html`<span class=\"buttonDescription\">${value.description}</span>` : ''}\r\n            </button>\r\n          `\r\n          )}\r\n      </div>\r\n    `;\r\n    }\r\n\r\n    toggleDataVisibility(key: string) {\r\n        const data  = this.data.get(key);\r\n        console.log(\"key is \" + key)\r\n        if (data && data.dataSource) {\r\n            data.dataSource.show = !data.dataSource.show;\r\n        }\r\n    }\r\n\r\n    toggleTilesetVisibility(key: string) {\r\n        const tilesetInfo = this.tilesetUrl.get(key);\r\n        console.log(tilesetInfo)\r\n        if (tilesetInfo && tilesetInfo.tileset) {\r\n            tilesetInfo.tileset.show = !tilesetInfo.tileset.show;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    override async updated(changedProperties: Map<string, unknown>) {\r\n        console.log(\"updated\")\r\n        if (changedProperties.has('data') && this.data.size >0) {\r\n                for (const [_, value] of this.data.entries()) {\r\n                    console.log(value)\r\n                    const dataSource = await addData(this._viewer,value.url, value.contour);\r\n                    await zoomToDataSource(this._viewer, dataSource)\r\n                    value.dataSource = dataSource;\r\n                }\r\n\r\n        if (changedProperties.has('tilesetUrl') && this.tilesetUrl.size > 0) {\r\n            for (const [_, value] of this.tilesetUrl.entries()) {\r\n                if (this._viewer) {\r\n                    console.log(value)\r\n                    value.tileset = addTileset(this._viewer, value.url);\r\n                }\r\n            }\r\n        }\r\n\r\n        }\r\n    }\r\n\r\n    override async firstUpdated() {\r\n        super.connectedCallback();\r\n        this._viewer = createCesiumViewer(\r\n            this.shadowRoot!.getElementById(\"cesiumContainer\")!,\r\n            this.cesiumBaseURL,\r\n            this.dataTerrain,\r\n        );\r\n    }\r\n\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'map-viewer': MapViewer;\r\n    }\r\n}\r\n"]}