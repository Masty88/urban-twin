{"version":3,"file":"map-viewer.js","sourceRoot":"","sources":["src/map-viewer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAC,kBAAkB,EAAC,MAAM,EAAE,MAAM,QAAQ,CAAC;AACtE,OAAO,EAAC,MAAM,EAAC,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAC,qBAAqB,EAAC,MAAM,oBAAoB,CAAC;AAIzD,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,qBAAqB,CAAC,UAAU,CAAC;IAAhE;;QAGI,kBAAa,GAAG,EAAE,CAAC;QAGnB,aAAQ,GAAG,EAAE,CAAC;QAGd,SAAI,GAAW,EAAE,CAAC;QAGlB,iBAAY,GAAG,EAAE,CAAA;IAwDrB,CAAC;IApDY,MAAM;QACX,OAAO,IAAI,CAAA;;;KAGd,CAAC;IACF,CAAC;IAGD,8FAA8F;IAC9F,kDAAkD;IAClD,iDAAiD;IACjD,8BAA8B;IAC9B,QAAQ;IACR,gEAAgE;IAChE,IAAI;IAEK,KAAK,CAAC,OAAO,CAAC,iBAAuC;QAC1D,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAE5C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACnB,MAAO,IAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;IACL,CAAC;IAEQ,KAAK,CAAC,YAAY;;QACvB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC;SAC/C;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CACrB,IAAI,CAAC,UAAW,CAAC,cAAc,CAAC,iBAAiB,CAAE,EACnD;YACI,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,KAAK;YACjB,eAAe,EAAE,KAAK;YACtB,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,IAAI;YACb,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,KAAK;YACzB,QAAQ,EAAE,KAAK;YACf,sCAAsC,EAAE,KAAK;YAC7C,oBAAoB,EAAE,KAAK;YAC3B,OAAO,EAAE,IAAI;YACb,eAAe,EAAG,kBAAkB,EAAE;SACzC,CACJ,CAAC;QAEF,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC7D,CAAC;;AAjEe,gBAAM,GAAG,MAAM,AAAT,CAAU;AAEhC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;gDACtC;AAGnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC;2CACrC;AAGd;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC;uCAC5B;AAGlB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAC,CAAC;+CACpC;AAZR,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAoErB;SApEY,SAAS","sourcesContent":["import {LitElement, html} from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { createWorldTerrain,createOsmBuildings,Viewer } from 'cesium';\r\nimport {styles} from \"./styles/styles\";\r\nimport {CesiumDataSourceMixin} from \"./mixins/dataMixin\";\r\n\r\n\r\n@customElement('map-viewer')\r\nexport class MapViewer extends CesiumDataSourceMixin(LitElement){\r\n    static override styles = styles;\r\n    @property({ type: String, attribute: 'cesium-base-url' })\r\n    cesiumBaseURL = '';\r\n\r\n    @property({ type: String, attribute: 'ion-token' })\r\n    ionToken = '';\r\n\r\n    @property({ type: String, attribute: `data` })\r\n    data: string = '';\r\n\r\n    @property({type: String, attribute: 'clamp-polygon'})\r\n    clampPolygon = ''\r\n\r\n    private _viewer: Viewer | undefined;\r\n\r\n    override render() {\r\n        return html`\r\n      <div id=\"cesiumContainer\">\r\n      </div>\r\n    `;\r\n    }\r\n\r\n\r\n    // override async attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    //     if (name.startsWith('data-') && newValue) {\r\n    //         await (this as any).addData(newValue);\r\n    //         console.log(\"here\")\r\n    //     }\r\n    //     super.attributeChangedCallback(name, oldValue, newValue);\r\n    // }\r\n\r\n    override async updated(changedProperties: Map<string, unknown>) {\r\n        if (changedProperties.has('data') && this.data) {\r\n\r\n            console.log(\"here\")\r\n            await (this as any).addData(this.data, this.clampPolygon);\r\n        }\r\n    }\r\n\r\n    override async firstUpdated() {\r\n        super.connectedCallback();\r\n\r\n        if (this.cesiumBaseURL) {\r\n            window.CESIUM_BASE_URL = this.cesiumBaseURL;\r\n        }\r\n\r\n        this._viewer = new Viewer(\r\n            this.shadowRoot!.getElementById('cesiumContainer')!,\r\n            {\r\n                animation: false,\r\n                homeButton: false,\r\n                baseLayerPicker: false,\r\n                geocoder: false,\r\n                infoBox: true,\r\n                sceneModePicker: true,\r\n                selectionIndicator: false,\r\n                timeline: false,\r\n                navigationInstructionsInitiallyVisible: false,\r\n                navigationHelpButton: false,\r\n                shadows: true,\r\n                terrainProvider : createWorldTerrain()\r\n            }\r\n        );\r\n\r\n        this._viewer?.scene.primitives.add(createOsmBuildings());\r\n    }\r\n\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'map-viewer': MapViewer;\r\n    }\r\n}\r\n"]}