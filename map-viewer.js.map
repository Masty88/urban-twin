{"version":3,"file":"map-viewer.js","sourceRoot":"","sources":["src/map-viewer.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html} from 'lit';\r\nimport {styles} from \"./styles/styles\";\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport './components/data-container';\r\nimport './components/layer-container';\r\nimport './components/button-container';\r\nimport { createCesiumViewer, zoomToDataSource } from './cesium/cesiumHelpers';\r\nimport { addData, addTileset } from './cesium/dataLoader';\r\nimport { Cesium3DTileset, DataSource, Viewer } from 'cesium';\r\nimport apiService from './api/apiService';\r\n\r\n@customElement('map-viewer')\r\nexport class MapViewer extends LitElement {\r\n    static override styles = styles\r\n\r\n    @property({ type: String, attribute: 'cesium-base-url' })\r\n    cesiumBaseURL = '';\r\n\r\n    @property({ type: String, attribute: 'ion-token' })\r\n    ionToken = '';\r\n\r\n    @property({ type: String, attribute: 'data-terrain' })\r\n    dataTerrain = '';\r\n\r\n    @property({ type: Array, attribute: 'data-tileset' })\r\n    tilesetUrl: Array<{\r\n        key: string;\r\n        url: string;\r\n        icon?: string;\r\n        description?: string;\r\n        tileset?: Cesium3DTileset;\r\n    }> = [];\r\n\r\n    @property({ type: Array, attribute: 'data' })\r\n    data: Array<{\r\n        key: string;\r\n        url: string;\r\n        contour: boolean;\r\n        icon?: string;\r\n        description?: string;\r\n        dataSource?: DataSource;\r\n    }> = [];\r\n\r\n    private _viewer: Viewer | undefined;\r\n\r\n    override render() {\r\n        return html`\r\n      <div id=\"cesiumContainer\"></div>\r\n      <data-container .data=${this.data}></data-container>\r\n      <layer-container .tilesetUrl=${this.tilesetUrl}></layer-container>\r\n      <button-container\r\n        .data=${this.data}\r\n        .tilesetUrl=${this.tilesetUrl}\r\n        @toggle-data=${this.toggleDataVisibility}\r\n        @toggle-tileset=${this.toggleTilesetVisibility}\r\n      ></button-container>\r\n    `;\r\n    }\r\n\r\n    override async updated(changedProperties: Map<string, unknown>) {\r\n        if (changedProperties.has('data') && this.data.length > 0) {\r\n            for (const value of this.data) {\r\n                const dataSource = await addData(this._viewer, value.url, value.contour);\r\n                await zoomToDataSource(this._viewer, dataSource);\r\n                value.dataSource = dataSource;\r\n            }\r\n        }\r\n\r\n        if (changedProperties.has('tilesetUrl') && this.tilesetUrl.length > 0) {\r\n            for (const value of this.tilesetUrl) {\r\n                if (this._viewer) {\r\n                    value.tileset = addTileset(this._viewer, value.url);\r\n                }\r\n            }\r\n        }\r\n\r\n        const apiData = await apiService.getData('area');\r\n        console.log(apiData);\r\n    }\r\n\r\n    override async firstUpdated() {\r\n        super.connectedCallback();\r\n        this._viewer = createCesiumViewer(\r\n            this.shadowRoot!.getElementById('cesiumContainer')!,\r\n            this.cesiumBaseURL,\r\n            this.dataTerrain\r\n        );\r\n    }\r\n\r\n    toggleDataVisibility(event: CustomEvent) {\r\n        const key = event.detail.key;\r\n        const data = this.data.find(item => item.key === key);\r\n        if (data && data.dataSource) {\r\n            data.dataSource.show = !data.dataSource.show;\r\n        }\r\n    }\r\n\r\n    toggleTilesetVisibility(event: CustomEvent) {\r\n            const key = event.detail.key;\r\n            const tilesetInfo = this.tilesetUrl.find(item => item.key === key);\r\n            if (tilesetInfo && tilesetInfo.tileset) {\r\n                tilesetInfo.tileset.show = !tilesetInfo.tileset.show;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'map-viewer': MapViewer;\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}