{"version":3,"file":"apiService.js","sourceRoot":"","sources":["../src/api/apiService.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,UAAU;IAGZ;QACI,gDAAgD;QAChD,IAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB,EAAE,aAAsB;QAClD,IAAI;YACA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,EAAE,CAAC;YACxC,IAAI,aAAa,EAAE;gBACf,GAAG,IAAI,IAAI,aAAa,EAAE,CAAC;aAC9B;YAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;YAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC;SACxB;QAAC,OAAO,KAAK,EAAE;YACZ,yCAAyC;YACzC,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,CAAC;SACf;IACL,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,QAAgB,EAAE,IAAS;QACtC,IAAI;YACA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;YACvE,OAAO,QAAQ,CAAC,IAAI,CAAC;SACxB;QAAC,OAAO,KAAK,EAAE;YACZ,yCAAyC;YACzC,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;YACrD,MAAM,KAAK,CAAC;SACf;IACL,CAAC;CAEJ;AAED,oEAAoE;AACpE,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAEpC,eAAe,UAAU,CAAC","sourcesContent":["import axios from 'axios';\r\n\r\nclass ApiService {\r\n    private baseURL: string;\r\n\r\n    constructor() {\r\n        // Imposta l'URL di base per le tue chiamate API\r\n        this.baseURL = 'http://localhost:8000/';\r\n    }\r\n\r\n    async getData(endpoint: string, optionalParam?: string) {\r\n        try {\r\n            let url = `${this.baseURL}/${endpoint}`;\r\n            if (optionalParam) {\r\n                url += `/${optionalParam}`;\r\n            }\r\n\r\n            const response = await axios.get(url);\r\n            console.log(\"res\", response)\r\n            return response.data;\r\n        } catch (error) {\r\n            // Gestisci gli errori delle chiamate API\r\n            console.error('Errore nella richiesta GET:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async postData(endpoint: string, data: any) {\r\n        try {\r\n            const response = await axios.post(`${this.baseURL}/${endpoint}`, data);\r\n            return response.data;\r\n        } catch (error) {\r\n            // Gestisci gli errori delle chiamate API\r\n            console.error('Errore nella richiesta POST:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Crea un'istanza del servizio API per l'utilizzo nell'applicazione\r\nconst apiService = new ApiService();\r\n\r\nexport default apiService;\r\n"]}