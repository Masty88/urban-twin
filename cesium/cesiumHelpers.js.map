{"version":3,"file":"cesiumHelpers.js","sourceRoot":"","sources":["../src/cesium/cesiumHelpers.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,MAAM,EAEN,qBAAqB,EACxB,MAAM,QAAQ,CAAC;AAChB,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AAEjC,MAAM,UAAU,kBAAkB,CAAC,SAAsB,EAAE,aAAqB;IAC5E,IAAI,aAAa,EAAE;QACf,MAAM,CAAC,eAAe,GAAG,aAAa,CAAC;KAC1C;IAED,IAAI,eAAe,CAAC;IAEhB,eAAe,GAAG,IAAI,qBAAqB,CAAC;QACxC,GAAG,EAAE,kDAAkD;KAC1D,CAAC,CAAC;IAEP,MAAM,CAAC,GAAG,CAAC,kBAAkB,GAAG,uLAAuL,CAAC;IAGxN,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE;QACjC,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;QACjB,eAAe,EAAE,KAAK;QACtB,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,IAAI;QACb,eAAe,EAAE,KAAK;QACtB,kBAAkB,EAAE,KAAK;QACzB,QAAQ,EAAE,KAAK;QACf,sCAAsC,EAAE,KAAK;QAC7C,oBAAoB,EAAE,KAAK;QAC3B,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,IAAI;QACjB,eAAe,EAAE,eAAe;KACnC,CAAC,CAAC;IAGH,oDAAoD;IACpD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC;IAClD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;IAC7B,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,MAA0B,EAAE,UAAkC;IACjG,IAAI,MAAM,IAAI,UAAU,EAAE;QACtB,IAAI;YACA,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACnC;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;SACzD;KACJ;SAAM;QACH,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAC9D;AACL,CAAC","sourcesContent":["import {\r\n    Viewer,\r\n    DataSource,\r\n    CesiumTerrainProvider\r\n} from \"cesium\";\r\nimport * as Cesium from \"cesium\";\r\n\r\nexport function createCesiumViewer(container: HTMLElement, cesiumBaseURL: string): Viewer {\r\n    if (cesiumBaseURL) {\r\n        window.CESIUM_BASE_URL = cesiumBaseURL;\r\n    }\r\n\r\n    let terrainProvider;\r\n\r\n        terrainProvider = new CesiumTerrainProvider({\r\n            url: \"https://download.swissgeol.ch/cli_terrain/ch-2m/\"\r\n        });\r\n\r\n    Cesium.Ion.defaultAccessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5ZWJiNzJiMC1hZGNmLTRhYTctOGYwZS02ZDBiYmQ0NjU4NTgiLCJpZCI6MTE1OTcwLCJpYXQiOjE2NjkyODY0Njd9.JAp-JdI_eee7oBE2E8gUhB-By3XaUHCLhZ0YnW0znpo\";\r\n\r\n\r\n    const viewer = new Viewer(container, {\r\n        animation: false,\r\n        homeButton: false,\r\n        baseLayerPicker: false,\r\n        geocoder: false,\r\n        infoBox: true,\r\n        sceneModePicker: false,\r\n        selectionIndicator: false,\r\n        timeline: false,\r\n        navigationInstructionsInitiallyVisible: false,\r\n        navigationHelpButton: false,\r\n        shadows: true,\r\n        scene3DOnly: true,\r\n        terrainProvider: terrainProvider,\r\n    });\r\n\r\n\r\n    //viewer.scene.primitives.add(createOsmBuildings());\r\n    viewer.scene.globe.depthTestAgainstTerrain = true;\r\n    console.log(\"viewer created\")\r\n    return viewer;\r\n}\r\n\r\nexport async function zoomToDataSource(viewer: Viewer | undefined, dataSource: DataSource | undefined) {\r\n    if (viewer && dataSource) {\r\n        try {\r\n            await viewer.zoomTo(dataSource);\r\n        } catch (error) {\r\n            console.error('Error zooming to data source:', error);\r\n        }\r\n    } else {\r\n        console.error('Error: Viewer or data source is undefined');\r\n    }\r\n}\r\n"]}